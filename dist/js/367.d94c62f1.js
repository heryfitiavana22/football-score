"use strict";(self.webpackChunkFootball_score=self.webpackChunkFootball_score||[]).push([[367,785],{84:(a,s,t)=>{function e(a){let s=new Date(a);return s.getFullYear()+"-"+(s.getMonth()+1)+"-"+s.getDate()}function n(a=new Date){let s=new Date(a);return s.getMonth()+1>=8?s.getFullYear()+"-08-01":s.getFullYear()-1+"-08-01"}function l(a=new Date){let s=new Date(a);return s.getMonth()+1>=8?s.getFullYear()+1+"-07-01":s.getFullYear()+"-07-01"}t.d(s,{Cx:()=>l,EP:()=>e,PD:()=>n})},587:(a,s,t)=>{t.d(s,{Z:()=>e});const e=async(a,s,e)=>{let n='<div class="listMatch">';0===(a=(await t.e(565).then(t.bind(t,565))).default(a,e)).length&&(n+='<p style="padding-left:15px">to wait after 1 min or no match</p>');for(let s of a){n+=`<div class="matchs">\n            <h3>${s.date}</h3>\n            <ul class="list-match">`;for(let a of s.game)"1"===a.match_live?n+=`<li class="live" id="${a.match_id}">\n                    <span class="hour-match" id="${a.match_id}">${isNaN(a.match_status)?a.match_status:a.match_status+" min"}</span>`:n+=`<li id="${a.match_id}">\n                    <span class="hour-match" id="${a.match_id}">${"Postponed"===a.match_status?"postponed":a.match_time}</span>`,n+=`<div class="match-item" id="${a.match_id}">\n                        <div class="home" id="${a.match_id}">\n                            <span class="${a.match_hometeam_score>a.match_awayteam_score?"winner":"  "}" id="${a.match_id}">${a.match_hometeam_name}</span>\n                            <img src="${a.team_home_badge||"assets/img/logo2.png"}" alt="icon-team" id="${a.match_id}" onerror="this.src = 'assets/img/logo2.png'">\n                            <span class="score-home score" id="${a.match_id}">${a.match_hometeam_score.length>0?a.match_hometeam_score:"  "}</span> \n                        </div>\n                        <span class="vs" id="${a.match_id}">vs</span>\n                        <div class="away" id="${a.match_id}">\n                            <span class="away-home score" id="${a.match_id}">${a.match_awayteam_score.length>0?a.match_awayteam_score:"  "}</span>\n                            <img src="${a.team_away_badge||"assets/img/logo2.png"}" alt="icon-team" id="${a.match_id}" onerror="this.src = 'assets/img/logo2.png'">\n                            <span class="${a.match_awayteam_score>a.match_hometeam_score?"winner":"  "}" id="${a.match_id}">${a.match_awayteam_name}</span>\n                        </div>\n                    </div>\n                </li>`}return n+="</div>",document.querySelector(".current-item").innerHTML=n,document.querySelector(".nav-info .active").classList.remove("active"),document.querySelector("#"+s).classList.add("active"),document.querySelector(".listMatch").addEventListener("click",(async a=>{let s=await t.e(524).then(t.bind(t,524)),e=a.target.id;isNaN(e)||""===e||s.default(!1,e)})),s}},337:(a,s,t)=>{t.d(s,{Z:()=>e});const e=(a,...s)=>{let e='<table class="standing-container">\n        <tr class="head-table">\n            <td class="team">Team</td>\n            <td>P <span class="caption-td">played<span></td>\n            <td>GF <span class="caption-td">goal for<span></td>\n            <td>GA <span class="caption-td">goal against<span></td>\n            <td>GD <span class="caption-td gd">goal difference<span></td>\n            <td>Pts <span class="caption-td">points<span></td>\n        </tr>';0===a.length&&(e+='<tr class="item-container" style="padding-left:15px"><td style="width: 100% !important">to wait after 1 min or not given</td></tr>');for(let t of a)e+=`<tr class="item-container ${s.includes(t.team_id)?"current-team":""}" id="${t.league_id}t${t.team_id}">\n                <td class="team" id="${t.league_id}t${t.team_id}">\n                    <span class="number" id="${t.league_id}t${t.team_id}">${t.overall_league_position}</span> \n                    <img src="${t.team_badge||"assets/img/logo2.png"}" alt="icon-team" id="${t.league_id}t${t.team_id}" onerror="this.src = '../../assets/img/logo2.png'">\n                    <span class="name" id="${t.league_id}t${t.team_id}">${t.team_name}</span>\n                </td>\n                <td id="${t.league_id}t${t.team_id}">\n                    ${t.overall_league_payed} \n                    <span class="caption-td">played<span>\n                </td>\n                <td id="${t.league_id}t${t.team_id}">\n                    ${t.overall_league_GF}\n                    <span class="caption-td">goal for<span>\n                </td>\n                <td id="${t.league_id}t${t.team_id}">\n                    ${t.overall_league_GA}\n                    <span class="caption-td">goal against<span>\n                </td>\n                <td id="${t.league_id}t${t.team_id}">\n                    ${t.overall_league_GF-t.overall_league_GA}\n                    <span class="caption-td gd">goal difference<span>\n                </td>\n                <td id="${t.league_id}t${t.team_id}">\n                    ${t.overall_league_PTS}\n                    <span class="caption-td">points<span>\n                </td>\n            </tr>`;return e+="</table>",document.querySelector(".current-item").innerHTML=e,document.querySelector(".nav-info li.active").classList.remove("active"),document.querySelector("#standing").classList.add("active"),document.querySelector(".standing-container").addEventListener("click",(async a=>{let s=a.target.attributes.class;if(s&&s.nodeValue.includes("current-team"))return;let e=a.target.id.split("t");2===e.length&&(await t.e(785).then(t.bind(t,785))).default(!1,...e)})),"standing"}},33:(a,s,t)=>{t.d(s,{Z:()=>r});var e=t(526),n=t(84);let l=(0,e.N)(),d=(0,e.Z)();const r=async(a,s=a,t=0,e=0)=>await new Promise(((r,i)=>{let c=`https://apiv3.apifootball.com/?action=get_events&from=${(0,n.EP)(a)}&to=${(0,n.EP)(s)}&APIkey=69d0f812ba6bef5b0c3a07882a32a546d04daae0fbaccad688d0df1c21f33a31&timezone=Africa/Nairobi`;t>0&&(c+=`&league_id=${t}`),e>0&&(c+=`&team_id=${e}`),fetch(c,{method:"get"}).then((a=>a.json())).then((a=>{if(a.error)return r([]);let s=a.filter((a=>d.includes(a.country_name)&&l.includes(a.league_name)));s.sort(((a,s)=>new Date(`${a.match_date} ${a.match_time}`)-new Date(`${s.match_date} ${s.match_time}`))),r(s)})).catch((a=>console.log(a)))}))},721:(a,s,t)=>{t.d(s,{Z:()=>e});const e=async a=>await new Promise(((s,t)=>{fetch(`https://apiv3.apifootball.com/?action=get_standings&league_id=${a}&APIkey=69d0f812ba6bef5b0c3a07882a32a546d04daae0fbaccad688d0df1c21f33a31`,{method:"get"}).then((a=>a.json())).then((a=>{s(a.error?[]:a)}))}))},785:(a,s,t)=>{t.r(s),t.d(s,{clearIntervalInfoTeam:()=>y,default:()=>u});var e=t(721),n=t(33);var l=t(337),d=t(587);const r=(a,s)=>{let t="";for(let s of a){t+=`<div class="type">\n            <span class="caption ${s.place}">${s.place}</span>`;for(let a of s.players)t+=`<div class="player">\n                <div class="img-player">\n                    <img src="${a.player_image||"assets/img/player.jpg"}" alt="img-player" onerror="this.src='assets/img/player.jpg'">\n                </div>\n                <span class="name">${a.player_name}</span>\n                <span class="number">${a.player_number}</span>\n                <footer>\n                    ${a.player_age} years\n                    <span class="rate">\n                        <span class="ti ti-star"></span>\n                        ${a.player_rating} \n                    </span>\n                </footer>\n            </div>`;t+="</div>"}a.length>0?t+=`<div class="type">\n            <span class="caption">Coach</span>\n            <div class="player">\n                <div class="img-player">\n                <img src="assets/img/player.jpg" alt="img-player" onerror="this.src='assets/img/player.jpg'">\n                </div>\n                <span class="name">${s.coach_name}</span>\n            </div>\n        </div>`:t+='<p style="padding-left:15px">not given</p>',document.querySelector(".current-item").innerHTML=t,document.querySelector(".nav-team li.active").classList.remove("active"),document.querySelector("#players").classList.add("active")},i=a=>{let s='<ul class="nav-stats">\n        <li id="default" class="active">default</li>\n        <li id="dribble">dribble</li>\n        <li id="passes">passes</li>\n        <li id="tackles">tackles</li>\n        <li id="duels">duels</li>\n        <li id="goal">goal</li>\n    </ul>\n    <table class="standing-container stats-player">\n        <tr class="head-table">\n            <td class="player-table">Player</td>\n            <td>P <span class="caption-td">played<span></td>\n            <td>age</td>\n            <td>\n                <img src="assets/img/goal.png" alt="goal" onerror="this.src=\'assets/img/goal.png\'"> \n                <span class="caption-td">goal<span>\n            </td>\n            <td>\n                <img src="assets/img/l.png" alt="assists" onerror="this.src=\'assets/img/l.png\'"> \n                <span class="caption-td">assists<span>\n            </td>\n            <td>\n                <img src="assets/img/yellow-card.png" alt="yellow-card" onerror="this.src=\'assets/img/yellow-card.png\'"> \n                <span class="caption-td">yellow card<span>\n            </td>\n            <td>\n                <img src="assets/img/red-card.png" alt="red-card" onerror="this.src=\'assets/img/red-card.png\'"> \n                <span class="caption-td">red card<span>\n            </td>\n            <td>\n                <img src="assets/img/injury.png" alt="injury-card" onerror="this.src=\'assets/img/injury.png\'"> \n                <span class="caption-td">injury<span>\n            </td>\n        </tr>';for(let t of a)for(let a of t.players)s+=`<tr class="tr-player">\n                <td class="player-table">\n                    <span class="number">${a.player_number}</span> \n                    <span>${a.player_name}</span>\n                </td>\n                <td>${a.player_match_played} <span class="caption-td">played<span></td>\n                <td>${a.player_age} <span class="caption-td">age<span></td>\n                <td>${a.player_goals} <span class="caption-td">goal<span></td>\n                <td>${a.player_assists} <span class="caption-td">assists<span></td>\n                <td>${a.player_yellow_cards} <span class="caption-td">yellow card<span></td>\n                <td>${a.player_red_cards} <span class="caption-td">red card<span></td>\n                <td>${"No"===a.player_injured?"":"yes"} <span class="caption-td">injury<span></td>\n            </tr>`;s+="</table>",document.querySelector(".current-item").innerHTML=s,document.querySelector(".nav-team li.active").classList.remove("active"),document.querySelector("#stats").classList.add("active"),document.querySelector(".nav-stats").addEventListener("click",(s=>{let t=s.target.id,e=document.querySelector(".head-table"),n=document.querySelectorAll(".tr-player");"dribble"===t?function(a,s,t){let e=0;s.innerHTML='<td class="player-table">Player</td>\n    <td>P <span class="caption-td">played<span></td>\n    <td>age</td>\n    <td><img src="assets/img/goal.png" alt="goal" onerror="this.src=\'assets/img/goal.png\'"> <span class="caption-td">goal<span></td>\n    <td><img src="assets/img/l.png" alt="assists" onerror="this.src=\'assets/img/l.png\'"> <span class="caption-td">assists<span></td>\n    <td>DA <spa class="caption-td">dribble attempts<span></td>\n    <td>DS <span class="caption-td">dribble succeed<span></td>\n    <td>shots</td>';for(let s of a)for(let a of s.players)t[e].innerHTML=`<td class="player-table">\n                <span class="number">${a.player_number}</span> \n                <span>${a.player_name}</span>\n            </td>\n            <td>${a.player_match_played} <span class="caption-td">played<span></td>\n            <td>${a.player_age} <span class="caption-td">age<span></td>\n            <td>${a.player_goals} <span class="caption-td">goal<span></td>\n            <td>${a.player_assists} <span class="caption-td">assists<span></td>\n            <td>${a.player_dribble_attempts} <span class="caption-td">dribble attempts<span></td>\n            <td>${a.player_dribble_succ} <span class="caption-td">dribble succeed<span></td>\n            <td>${a.player_shots_total} <span class="caption-td">shots<span></td>`,e++;document.querySelector(".nav-stats .active").classList.remove("active"),document.querySelector("#dribble").classList.add("active")}(a,e,n):"passes"===t?function(a,s,t){let e=0;s.innerHTML='<td class="player-table">Player</td>\n    <td>P <span class="caption-td">played<span></td>\n    <td>age</td>\n    <td><img src="assets/img/l.png" alt="assists" onerror="this.src=\'assets/img/l.png\'"> <span class="caption-td">assists<span></td>\n    <td>TP <span class="caption-td">total passes<span></td>\n    <td>PA <span class="caption-td">passes accuracy<span></td>\n    <td>KP <span class="caption-td">key passes<span></td>\n    <td><img src="assets/img/injury.png" alt="injury-card" onerror="this.src=\'assets/img/injury.png\'"> <span class="caption-td">injury<span></td>';for(let s of a)for(let a of s.players)t[e].innerHTML=`<td class="player-table">\n                <span class="number">${a.player_number}</span> \n                <span>${a.player_name}</span>\n            </td>\n            <td>${a.player_match_played} <span class="caption-td">played<span></td>\n            <td>${a.player_age} <span class="caption-td">age<span></td>\n            <td>${a.player_assists} <span class="caption-td">assists<span></td>\n            <td>${a.player_passes} <span class="caption-td">total passes<span></td>\n            <td>${a.player_passes_accuracy} <span class="caption-td">passes accuracy<span></td>\n            <td>${a.player_key_passes} <span class="caption-td">key passes<span></td>\n            <td>${"No"===a.player_injured?"":"yes"} <span class="caption-td">injury<span></td>`,e++;document.querySelector(".nav-stats .active").classList.remove("active"),document.querySelector("#passes").classList.add("active")}(a,e,n):"tackles"===t?function(a,s,t){let e=0;s.innerHTML='<td class="player-table">Player</td>\n    <td>P <span class="caption-td">played<span></td>\n    <td>tackles</td>\n    <td>INT <span class="caption-td">interceptions<span></td>\n    <td>F <span class="caption-td">fouls<span></td>\n    <td><img src="assets/img/yellow-card.png" alt="yellow-card" onerror="this.src=\'assets/img/yellow-card.png\'"> <span class="caption-td">yellow card<span></td>\n    <td><img src="assets/img/red-card.png" alt="red-card" onerror="this.src=\'assets/img/red-card.png\'"> <span class="caption-td">red card<span></td>\n    <td><img src="assets/img/injury.png" alt="injury-card" onerror="this.src=\'assets/img/injury.png\'"> <span class="caption-td">injury<span></td>';for(let s of a)for(let a of s.players)t[e].innerHTML=`<td class="player-table">\n                <span class="number">${a.player_number}</span> \n                <span>${a.player_name}</span>\n            </td>\n            <td>${a.player_match_played} <span class="caption-td">played<span></td></td>\n            <td>${a.player_tackles} <span class="caption-td">tackles<span></td>\n            <td>${a.player_interceptions} <span class="caption-td">interceptions<span></td>\n            <td>${a.player_fouls_committed} <span class="caption-td">fouls<span></td>\n            <td>${a.player_yellow_cards} <span class="caption-td">yellow card<span></td>\n            <td>${a.player_red_cards} <span class="caption-td">red card<span></td>\n            <td>${"No"===a.player_injured?"":"yes"} <span class="caption-td">injury<span></td>`,e++;document.querySelector(".nav-stats .active").classList.remove("active"),document.querySelector("#tackles").classList.add("active")}(a,e,n):"duels"===t?function(a,s,t){let e=0;s.innerHTML='<td class="player-table">Player</td>\n    <td>P <span class="caption-td">played<span></td>\n    <td>age</td>\n    <td>DT <span class="caption-td">duels total<span></td>\n    <td>DW <span class="caption-td">duels won<span></td>\n    <td>\n        <img src="assets/img/yellow-card.png" alt="yellow-card" onerror="this.src=\'assets/img/yellow-card.png\'"> \n        <span class="caption-td">yellow card<span>\n    </td>\n    <td>\n        <img src="assets/img/red-card.png" alt="red-card" onerror="this.src=\'assets/img/red-card.png\'">\n        <span class="caption-td">red card<span>\n    </td>\n    <td>\n        <img src="assets/img/injury.png" alt="injury-card" onerror="this.src=\'assets/img/injury.png\'"> \n        <span class="caption-td">injury<span>\n    </td>';for(let s of a)for(let a of s.players)t[e].innerHTML=`<td class="player-table">\n                <span class="number">${a.player_number}</span> \n                <span>${a.player_name}</span>\n            </td>\n            <td>${a.player_match_played} <span class="caption-td">played<span></td>\n            <td>${a.player_age} <span class="caption-td">age<span></td>\n            <td>${a.player_duels_total} <span class="caption-td">duels total<span></td>\n            <td>${a.player_duels_won} <span class="caption-td">duels won<span></td>\n            <td>${a.player_yellow_cards} <span class="caption-td">yellow card<span></td>\n            <td>${a.player_red_cards} <span class="caption-td">red card<span></td>\n            <td>${"No"===a.player_injured?"":"yes"} <span class="caption-td">injury<span></td>`,e++;document.querySelector(".nav-stats .active").classList.remove("active"),document.querySelector("#duels").classList.add("active")}(a,e,n):"goal"===t?function(a,s,t){let e=0;s.innerHTML='<td class="player-table">Player</td>\n    <td>P <span class="caption-td">played<span></td>\n    <td>age</td>\n    <td>GC <span class="caption-td">goal conceded<span></td>\n    <td>saves</td>\n    <td><img src="assets/img/yellow-card.png" alt="yellow-card" onerror="this.src=\'assets/img/yellow-card.png\'"> <span class="caption-td">yellow card<span></td>\n    <td><img src="assets/img/red-card.png" alt="red-card" onerror="this.src=\'assets/img/red-card.png\'"> <span class="caption-td">red card<span></td>\n    <td><img src="assets/img/injury.png" alt="injury-card" onerror="this.src=\'assets/img/injury.png\'"> <span class="caption-td">injury<span></td>';for(let s of a)for(let a of s.players)t[e].innerHTML=`<td class="player-table">\n                <span class="number">${a.player_number}</span> \n                <span>${a.player_name}</span>\n            </td>\n            <td>${a.player_match_played} <span class="caption-td">played<span></td>\n            <td>${a.player_age} <span class="caption-td">age<span></td>\n            <td>${0==a.player_goals_conceded||""===a.player_goals_conceded?"":a.player_goals_conceded} <span class="caption-td">goal conceded<span></td>\n            <td>${a.player_saves?a.player_saves:""} <span class="caption-td">saves<span></td>\n            <td>${a.player_yellow_cards} <span class="caption-td">yellow card<span></td>\n            <td>${a.player_red_cards} <span class="caption-td">red card<span></td>\n            <td>${"No"===a.player_injured?"":"yes"} <span class="caption-td">injury<span></td>`,e++;document.querySelector(".nav-stats .active").classList.remove("active"),document.querySelector("#goal").classList.add("active")}(a,e,n):function(a,s,t){let e=0;s.innerHTML='<td class="player-table">Player</td>\n    <td>P <span class="caption-td">played<span></td>\n    <td>age</td>\n    <td><img src="assets/img/goal.png" alt="goal" onerror="this.src=\'assets/img/goal.png\'"> <span class="caption-td">goal<span></td>\n    <td><img src="assets/img/l.png" alt="assists" onerror="this.src=\'assets/img/l.png\'"> <span class="caption-td">assists<span></td>\n    <td><img src="assets/img/yellow-card.png" alt="yellow-card" onerror="this.src=\'assets/img/yellow-card.png\'"> <span class="caption-td">yellow card<span></td>\n    <td><img src="assets/img/red-card.png" alt="red-card" onerror="this.src=\'assets/img/red-card.png\'"> <span class="caption-td">red card<span></td>\n    <td><img src="assets/img/injury.png" alt="injury-card" onerror="this.src=\'assets/img/injury.png\'"> <span class="caption-td">injury<span></td>';for(let s of a)for(let a of s.players)t[e].innerHTML=`<td class="player-table">\n                <span class="number">${a.player_number}</span> \n                <span>${a.player_name}</span>\n            </td>\n            <td>${a.player_match_played} <span class="caption-td">played<span></td>\n            <td>${a.player_age} <span class="caption-td">age<span></td>\n            <td>${a.player_goals} <span class="caption-td">goal<span></td>\n            <td>${a.player_assists} <span class="caption-td">assists<span></td>\n            <td>${a.player_yellow_cards} <span class="caption-td">yellow card<span></td>\n            <td>${a.player_red_cards} <span class="caption-td">red card<span></td>\n                <td>${"No"===a.player_injured?"":"yes"} <span class="caption-td">injury<span></td>`,e++;document.querySelector(".nav-stats .active").classList.remove("active"),document.querySelector("#default").classList.add("active")}(a,e,n)}))};var c=t(2);var p=t(84),o=t(212);let m,g;const u=async(a=!1,s,t)=>{let u=[],y=[],_=[],h=[],$=[];(0,o.V)(),window.scroll(0,0),a||(0,c.default)(`team/${s}&${t}`),(0,n.Z)((0,p.PD)(),new Date,0,t).then((a=>{y=a})),(0,n.Z)(new Date,(0,p.Cx)(),0,t).then((a=>u=a)),(0,e.Z)(s).then((a=>_=a)),h=await(async a=>new Promise(((s,t)=>{fetch(`https://apiv3.apifootball.com/?action=get_teams&team_id=${a}&APIkey=69d0f812ba6bef5b0c3a07882a32a546d04daae0fbaccad688d0df1c21f33a31`,{method:"get"}).then((a=>a.json())).then((a=>{s(a[0])}))})))(t),((a,s)=>{let t=`<div class="info-team info">\n        <div class="country-league">\n            <div class="league">\n                <img src="${a}" alt="icon-league" onerror="this.src='assets/img/logo2.png'">\n                <div>\n                    <span class="name">${s}</span>\n                </div>\n            </div>\n        </div>\n        <ul class="nav-team nav-info">\n            <li id="players" class="active">Players</li>\n            <li id="calendar">Calendar</li> \n            <li id="results">Results</li>\n            <li id="standing">Standing</li> \n            <li id="stats">Stats</li>\n        </ul>\n        <div class="current-item">\n            \n        </div>\n    </div>`;document.querySelector(".current-element").innerHTML=t;let e=document.querySelector("#icon-toggle-calendar");e&&(e.style.visibility="hidden")})(h.team_badge,h.team_name),$=h.coaches[0],h=(a=>{let s=[],t=[];for(let e of a)t.includes(e.player_type)||(s.push({place:e.player_type,players:a.filter((a=>a.player_type===e.player_type)),number:void 0}),t.push(e.player_type));return t.indexOf("Goalkeepers")>=0&&(s[t.indexOf("Goalkeepers")].number=1),t.indexOf("Defenders")>=0&&(s[t.indexOf("Defenders")].number=2),t.indexOf("Midfielders")>=0&&(s[t.indexOf("Midfielders")].number=3),t.indexOf("Forwards")>=0&&(s[t.indexOf("Forwards")].number=4),s.sort(((a,s)=>a.number-s.number)),s})(h.players),r(h,$),document.querySelector(".nav-team").addEventListener("click",(a=>{let s=a.target.id;"calendar"===s?m=(0,d.Z)(u,"calendar","ASC"):"results"===s?m=(0,d.Z)(y,"results"):"standing"===s?(0,l.Z)(_,t):"stats"===s?i(h):r(h,$)})),(0,o.b)();let v=document.querySelector(".list-league li.active");v&&v.classList.remove("active"),g=setInterval((async()=>{"calendar"===m?(m=(0,d.Z)(u,"calendar"),u=await(0,n.Z)(new Date,(0,p.Cx)(),0,t),"calendar"===m&&(m=(0,d.Z)(u,"calendar","ASC"))):"results"===m&&(m=(0,d.Z)(y,"results"),y=await(0,n.Z)((0,p.PD)(),new Date,0,t),"result"===m&&(m=(0,d.Z)(y,"result")))}),55e3)};function y(){clearInterval(g),m=void 0}},526:(a,s,t)=>{function e(){return"England,Belgium,Germany,Croatia,Spain,Czech Republic,France,Romania,Bulgaria,Italy,intl,eurocups,South Africa,Qatar,Worldcup,USA,Denmark,Norway,Sweden,Korea Republic,Netherlands,Mexico,Argentina,Portugal,Russia,Brazil,Switzerland,Brazil,Morocco"}function n(){return"Championship,Community Shield,FA Cup,League Cup,League One,Premier League,EFL Trophy,National League,Women's Championship,Copa del Rey,La Liga,Segunda División,Super Cup,Primera División Femenina,Primera División RFEF,DFB Pokal,Regionalliga,Super Cup,2. Bundesliga,Bundesliga,Ligue 1,Ligue 2,Coupe de la Ligue,Feminine Division 1,National 1,Trophée des Champions,Coupe de France,Serie A,Serie B,Super Cup,Coppa Italia,First Division A,Challenger Pro League,First NL,Czech Liga,Liga I,First League,CAF Super Cup,Club Friendlies,COSAFA Cup,Friendlies,UEFA U21 Championship,Africa Cup of Nations,CAF Champions League,CAF Confederation Cup,UEFA Champions League,UEFA Champions League - Group Stage,UEFA Europa League,UEFA Europa League - Group Stage,UEFA Youth League,UEFA Youth League - Group Stage,PSL,QSL Cup,World Cup,MLS,Superliga,1. Division,Damallsvenskan,K League 1,Eredivisie,Eerste Divisie,Liga MX,Liga Profesional Argentina,Primeira Liga,Premier League,Serie A,Super League,Botola Pro,Premier League"}t.d(s,{N:()=>n,Z:()=>e})}}]);
//# sourceMappingURL=367.d94c62f1.js.map