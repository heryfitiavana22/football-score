{"version":3,"file":"js/src_js_func_displayMatchByDate_js-src_js_func_displayStanding_js-src_js_func_getStanding_js-_-7ce89f1.bundle.js","mappings":";;;;;;;;;;;;;AAAA,iEAAe;AACf,6BAA6B,+KAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD,mDAAmD,eAAe,IAAI,iFAAiF;AACvJ,4CAA4C;AAC5C;AACA;AACA,2BAA2B,eAAe;AAC1C,mDAAmD,eAAe,IAAI,sEAAsE;AAC5I;AACA,mDAAmD,eAAe;AAClE,gDAAgD,eAAe;AAC/D,2CAA2C,4EAA4E,QAAQ,eAAe,IAAI,0BAA0B;AAC5K,wCAAwC,gDAAgD,wBAAwB,eAAe;AAC/H,iEAAiE,eAAe,IAAI,4EAA4E;AAChK;AACA,+CAA+C,eAAe;AAC9D,gDAAgD,eAAe;AAC/D,gEAAgE,eAAe,IAAI,4EAA4E;AAC/J,wCAAwC,gDAAgD,wBAAwB,eAAe;AAC/H,2CAA2C,4EAA4E,QAAQ,eAAe,IAAI,0BAA0B;AAC5K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2LAAgC;AAC9D;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA,CAAC,EAAC;;;;;;;;;;;;;;;AC1DF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAwD,QAAQ,kBAAkB,GAAG,gBAAgB;AAC9I,uCAAuC,kBAAkB,GAAG,gBAAgB;AAC5E,+CAA+C,kBAAkB,GAAG,gBAAgB,IAAI,gCAAgC;AACxH,gCAAgC,6CAA6C,wBAAwB,kBAAkB,GAAG,gBAAgB;AAC1I,6CAA6C,kBAAkB,GAAG,gBAAgB,IAAI,kBAAkB;AACxG;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,6BAA6B,qLAA8B;AAC3D;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;AC7DA,aAAa,kEAAmB;AAChC,iEAAe;AACf;AACA,mFAAmF,SAAS,UAAU,OAAO;AAC7G,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC","sources":["webpack://Football score/./src/js/func/displayMatchByDate.js","webpack://Football score/./src/js/func/displayStanding.js","webpack://Football score/./src/js/func/getStanding.js"],"sourcesContent":["export default async (game, idHTML, type) => {\n    let filterByDate = await import('./filterByDate')\n    game = filterByDate.default(game, idHTML, type)\n    // console.log(idHTML);\n    // console.log(game);\n    let listGameHTML =\n    `<div class=\"listMatch\">`;\n    if(game.length === 0)\n        listGameHTML +=  `<p style=\"padding-left:15px\">to wait after 1 min or no match</p>`\n    for(let date of game) {\n        listGameHTML +=\n        `<div class=\"matchs\">\n            <h3>${date.date}</h3>\n            <ul class=\"list-match\">`;\n            for(let match of date.game) {\n                // live match\n                if(match.match_live === '1') \n                listGameHTML += \n                `<li class=\"live\" id=\"${match.match_id}\">\n                    <span class=\"hour-match\" id=\"${match.match_id}\">${isNaN(match.match_status) ? match.match_status : ((match.match_status + ' min'))}</span>`;\n                // match mbola tsy nandeha; finished game and postponed\n                else \n                listGameHTML += \n                `<li id=\"${match.match_id}\">\n                    <span class=\"hour-match\" id=\"${match.match_id}\">${(match.match_status === 'Postponed') ? 'postponed' : match.match_time}</span>`\n                listGameHTML += \n                    `<div class=\"match-item\" id=\"${match.match_id}\">\n                        <div class=\"home\" id=\"${match.match_id}\">\n                            <span class=\"${(match.match_hometeam_score > match.match_awayteam_score) ? 'winner' : '  '}\" id=\"${match.match_id}\">${match.match_hometeam_name}</span>\n                            <img src=\"${match.team_home_badge || 'assets/img/logo2.png'}\" alt=\"icon-team\" id=\"${match.match_id}\" onerror=\"this.src = 'assets/img/logo2.png'\">\n                            <span class=\"score-home score\" id=\"${match.match_id}\">${(match.match_hometeam_score.length > 0) ? match.match_hometeam_score : '  '}</span> \n                        </div>\n                        <span class=\"vs\" id=\"${match.match_id}\">vs</span>\n                        <div class=\"away\" id=\"${match.match_id}\">\n                            <span class=\"away-home score\" id=\"${match.match_id}\">${(match.match_awayteam_score.length > 0) ? match.match_awayteam_score : '  '}</span>\n                            <img src=\"${match.team_away_badge || 'assets/img/logo2.png'}\" alt=\"icon-team\" id=\"${match.match_id}\" onerror=\"this.src = 'assets/img/logo2.png'\">\n                            <span class=\"${(match.match_awayteam_score > match.match_hometeam_score) ? 'winner' : '  '}\" id=\"${match.match_id}\">${match.match_awayteam_name}</span>\n                        </div>\n                    </div>\n                </li>`;\n            }\n            `</ul>\n        </div>`\n    }\n    listGameHTML +=\n    `</div>`;\n    document.querySelector('.current-item').innerHTML = listGameHTML\n    document.querySelector('.nav-info .active').classList.remove('active')\n    document.querySelector('#'+idHTML).classList.add('active')\n    /* onclick match */\n    document.querySelector('.listMatch').addEventListener('click', async (e) => {\n        let infoMatch = await import('../infoMatch/infoMatch') \n        let id = e.target.id\n        if(isNaN(id) || id === '') \n            return; // au cas ou tsy nombre\n        infoMatch.default(false, id)\n    })\n    return idHTML;\n};\n","export default (standing, ...idTeams) => {\n    // console.log(idTeams);\n    let standingHTML =\n    `<table class=\"standing-container\">\n        <tr class=\"head-table\">\n            <td class=\"team\">Team</td>\n            <td>P <span class=\"caption-td\">played<span></td>\n            <td>GF <span class=\"caption-td\">goal for<span></td>\n            <td>GA <span class=\"caption-td\">goal against<span></td>\n            <td>GD <span class=\"caption-td gd\">goal difference<span></td>\n            <td>Pts <span class=\"caption-td\">points<span></td>\n        </tr>`;\n        if(standing.length === 0)\n            standingHTML +=  `<tr class=\"item-container\" style=\"padding-left:15px\"><td style=\"width: 100% !important\">to wait after 1 min or not given</td></tr>`\n        for(let element of standing) {\n            standingHTML += \n            `<tr class=\"item-container ${idTeams.includes(element.team_id) ? 'current-team' : ''}\" id=\"${element.league_id}t${element.team_id}\">\n                <td class=\"team\" id=\"${element.league_id}t${element.team_id}\">\n                    <span class=\"number\" id=\"${element.league_id}t${element.team_id}\">${element.overall_league_position}</span> \n                    <img src=\"${element.team_badge || 'assets/img/logo2.png'}\" alt=\"icon-team\" id=\"${element.league_id}t${element.team_id}\" onerror=\"this.src = '../../assets/img/logo2.png'\">\n                    <span class=\"name\" id=\"${element.league_id}t${element.team_id}\">${element.team_name}</span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_payed} \n                    <span class=\"caption-td\">played<span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_GF}\n                    <span class=\"caption-td\">goal for<span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_GA}\n                    <span class=\"caption-td\">goal against<span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_GF - element.overall_league_GA}\n                    <span class=\"caption-td gd\">goal difference<span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_PTS}\n                    <span class=\"caption-td\">points<span>\n                </td>\n            </tr>`\n        }\n    standingHTML += `</table>`\n    document.querySelector('.current-item').innerHTML = standingHTML\n    // active\n    document.querySelector('.nav-info li.active').classList.remove('active');\n    document.querySelector('#standing').classList.add('active');\n\n    document.querySelector('.standing-container').addEventListener('click', async (e) => {\n        let className = e.target.attributes.class;\n        if(className && className.nodeValue.includes(\"current-team\")) return\n\n\n        let id = e.target.id.split('t');\n        if(id.length !== 2) return\n        let infoTeam = await import('../infoTeam/infoTeam')\n        infoTeam.default(false, ...id)\n    })\n    return \"standing\"\n}","let apiKey = process.env.API_KEY;\nexport default async (idLeague) => {\n    return await new Promise((resolve, reject) => {\n        let url = `https://apiv3.apifootball.com/?action=get_standings&league_id=${idLeague}&APIkey=${apiKey}`;\n        fetch(url, {method : 'get'})\n        .then(response => response.json())\n        .then((value) => {\n            // console.log('getStanding');\n            // console.log(value);\n            resolve(value.error ? [] : value)\n        })\n    })\n} "],"names":[],"sourceRoot":""}