{"version":3,"file":"js/src_js_func_displayStanding_js-src_js_func_getStanding_js-_b72d-_d43d0.bundle.js","mappings":";;;;;;;;;;;;;AAAA,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAwD,QAAQ,kBAAkB,GAAG,gBAAgB;AAC9I,uCAAuC,kBAAkB,GAAG,gBAAgB;AAC5E,+CAA+C,kBAAkB,GAAG,gBAAgB,IAAI,gCAAgC;AACxH,gCAAgC,6CAA6C,wBAAwB,kBAAkB,GAAG,gBAAgB;AAC1I,6CAA6C,kBAAkB,GAAG,gBAAgB,IAAI,kBAAkB;AACxG;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA,0BAA0B,kBAAkB,GAAG,gBAAgB;AAC/D,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,6BAA6B,qLAA8B;AAC3D;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;AC3DA,aAAa,kEAAmB;AAChC,iEAAe;AACf;AACA,mFAAmF,SAAS,UAAU,OAAO;AAC7G,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC","sources":["webpack://Football score/./src/js/func/displayStanding.js","webpack://Football score/./src/js/func/getStanding.js"],"sourcesContent":["export default (standing, ...idTeams) => {\n    // console.log(idTeams);\n    let standingHTML =\n    `<table class=\"standing-container\">\n        <tr class=\"head-table\">\n            <td class=\"team\">Team</td>\n            <td>P <span class=\"caption-td\">played<span></td>\n            <td>GF <span class=\"caption-td\">goal for<span></td>\n            <td>GA <span class=\"caption-td\">goal against<span></td>\n            <td>GD <span class=\"caption-td gd\">goal difference<span></td>\n            <td>Pts <span class=\"caption-td\">points<span></td>\n        </tr>`;\n        for(let element of standing) {\n            standingHTML += \n            `<tr class=\"item-container ${idTeams.includes(element.team_id) ? 'current-team' : ''}\" id=\"${element.league_id}t${element.team_id}\">\n                <td class=\"team\" id=\"${element.league_id}t${element.team_id}\">\n                    <span class=\"number\" id=\"${element.league_id}t${element.team_id}\">${element.overall_league_position}</span> \n                    <img src=\"${element.team_badge || 'assets/img/logo2.png'}\" alt=\"icon-team\" id=\"${element.league_id}t${element.team_id}\" onerror=\"this.src = '../../assets/img/logo2.png'\">\n                    <span class=\"name\" id=\"${element.league_id}t${element.team_id}\">${element.team_name}</span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_payed} \n                    <span class=\"caption-td\">played<span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_GF}\n                    <span class=\"caption-td\">goal for<span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_GA}\n                    <span class=\"caption-td\">goal against<span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_GF - element.overall_league_GA}\n                    <span class=\"caption-td gd\">goal difference<span>\n                </td>\n                <td id=\"${element.league_id}t${element.team_id}\">\n                    ${element.overall_league_PTS}\n                    <span class=\"caption-td\">points<span>\n                </td>\n            </tr>`\n        }\n    standingHTML += `</table>`\n    document.querySelector('.current-item').innerHTML = standingHTML\n    // active\n    document.querySelector('.nav-info li.active').classList.remove('active');\n    document.querySelector('#standing').classList.add('active');\n\n    document.querySelector('.standing-container').addEventListener('click', async (e) => {\n        let className = e.target.attributes.class;\n        if(className && className.nodeValue.includes(\"current-team\")) return\n\n\n        let id = e.target.id.split('t');\n        if(id.length !== 2) return\n        let infoTeam = await import('../infoTeam/infoTeam')\n        infoTeam.default(false, ...id)\n    })\n    return \"standing\"\n}","let apiKey = process.env.API_KEY;\nexport default async (idLeague) => {\n    return await new Promise((resolve, reject) => {\n        let url = `https://apiv3.apifootball.com/?action=get_standings&league_id=${idLeague}&APIkey=${apiKey}`;\n        fetch(url, {method : 'get'})\n        .then(response => response.json())\n        .then((value) => {\n            // console.log('getStanding');\n            // console.log(value);\n            resolve(value.error ? [] : value)\n        })\n    })\n} "],"names":[],"sourceRoot":""}